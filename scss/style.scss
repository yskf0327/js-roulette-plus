:root {
  /* color */
  --main-color: #F2E750;
  --base-color: #010006;
  --accent-color01: #05D9E8;
  --accent-color02: #FF2A6D;
  --text-color: #010006;
  --white: #ffffff;

}

/* mixin */
@mixin button {
  appearance: none;
}

/*** The new CSS reset - version 1.11.1 (last updated 24.10.2023) ***/

*:where(:not(html, iframe, canvas, img, svg, video, audio):not(svg*, symbol*)) {
  all: unset;
  display: revert
}

*,
*::before,
*::after {
  margin: 0;
  padding: 0;
  box-sizing: border-box
}

html {
  -moz-text-size-adjust: none;
  -webkit-text-size-adjust: none;
  text-size-adjust: none
}

a,
button {
  cursor: revert
}

ol,
ul,
menu,
summary {
  list-style: none
}

img {
  max-inline-size: 100%;
  max-block-size: 100%
}

table {
  border-collapse: collapse
}

input,
textarea {
  -webkit-user-select: auto
}

textarea {
  white-space: revert
}

meter {
  -webkit-appearance: revert;
  appearance: revert
}

:where(pre) {
  all: revert;
  box-sizing: border-box
}

::placeholder {
  color: unset
}

:where([hidden]) {
  display: none
}

:where([contenteditable]:not([contenteditable="false"])) {
  -moz-user-modify: read-write;
  -webkit-user-modify: read-write;
  overflow-wrap: break-word;
  -webkit-line-break: after-white-space;
  -webkit-user-select: auto
}

:where([draggable="true"]) {
  -webkit-user-drag: element
}

:where(dialog:modal) {
  all: revert;
  box-sizing: border-box
}

/* base */
body {
  max-height: 100dvh;
  font-family: "Orbitron", sans-serif;
  font-optical-sizing: auto;
  font-weight: normal;
  font-style: normal;
  background-color: var(--base-color);
}

:where(input:is([type=text], [type=number], [type=password]), textarea) {
  padding: 0.3rem;
}

textarea {
  resize: none;
}

:is(button, input[type=submit], input[type=button], input[type=reset]) {
  appearance: none;
  cursor: pointer;
  border: none;
  background-color: transparent;
}

/* menu */
.menu {
  opacity: 0;
  transition: opacity 0.3s ease-in-out;
  position: fixed;
  inset: 0;
  background-color: var(--main-color);
  color: var(--text-color);

  &.is-opened {
    opacity: 1;
  }

  form {
    position: fixed;
    inset: 0;
    margin: auto;
    width: fit-content;
    height: fit-content;
  }
}

/* utility */
@mixin visuallyHidden {
  position: absolute;
  white-space: nowrap;
  width: 1px;
  height: 1px;
  overflow: hidden;
  bottom: 0;
  padding: 0;
  clip: rect(0 0 0 0);
  clip-path: inset(50%);
  margin: -1px;
}

/* form */
.c-form {
  &>*+* {
    margin-block-start: 3rem;
  }
}

.c-form__group {
  &.hide {
    /* visibility: hidden; */
    display: none;
  }

  input[type=radio] {
    margin-inline-end: 0.5rem;

    &:not(:first-child) {
      margin-inline-start: 1rem;
    }
  }

  input[type=number],
  input[type=text] {
    appearance: none;
    border: none;
    background-color: transparent;
    font-family: inherit;
    font-size: 1.2rem;
    padding: 0.2em;
    border-style: solid;
    border-color: var(--main-color) var(--main-color) var(--text-color) var(--main-color);
    border-width: 1px;
    text-align: center;
    transition: border-color 0.1s ease-in-out;
    -moz-appearance: textfield;
    caret-color: var(--accent-color02);
    &:focus {
      border-width: 1px;
      border-color: var(--accent-color02);
      outline: none;
    }

    &::-webkit-inner-spin-button,
    &::-webkit-outer-spin-button {
      appearance: none;
      -webkit-appearance: none;
      margin: 0;
    }
  }

  input[type=number] {
    width: 3em;
    margin-inline-start: 0.5rem;
  }

  input[type=text] {
    width: 6em;
  }

  .c-option-input__group {
    display: flex;
    gap: 1em;

    &+* {
      margin-block-start: 1em;
    }
  }

  label {
    transition: color 0.1s ease-in-out;
    font-size: 1.2rem;
  }

  &:has(*:focus) {
    label {
      color: var(--accent-color02);
    }

    input[type=radio]+label {
      color: inherit;
    }
  }

  input[type=radio]:checked+label {
    color: var(--accent-color02);
  }

}

/* radio */
.c-radio-wrapper {
  display: flex;
  gap: 2.5em;
  padding-inline-start: 20px
}

input[type=radio] {
  @include visuallyHidden();

  &+label {
    display: flex;
    align-items: center;
    position: relative;
    transition: color 0.1s ease-in-out;

    &:before,
    &:after {
      content: '';
      border-radius: 50%;
      position: absolute;
      left: -1.2em;
    }

    &:before {
      width: 20px;
      height: 20px;
      border: 1px solid #000;
    }

    &:after {
      width: 12px;
      height: 12px;
      background-color: var(--accent-color02);
      translate: 4px;
      transition: opacity 0.1s ease-in-out;
      opacity: 0;
    }
  }

  &:checked {
    &+label {
      &:after {
        opacity: 1;
      }
    }
  }
}

/* button */
@mixin button($fz) {
  font-size: $fz;
  font-weight: bold;
  font-family: inherit;
  border-radius: 10px;
  transition: color 0.3s ease-in-out, background-color, 0.3s ease-in-out, border-color, 0.3s ease-in-out;
  letter-spacing: 0.1em;
}

button.button__primary {
  @include button(1.5rem);
  color: var(--main-color);
  background-color: var(--base-color);
  border: 2px solid var(--base-color);
  padding: 0.5rem 2rem;
}

button.button__secondary {
  @include button(2.5rem);
  color: var(--main-color);
  background-color: var(--base-color);
  border: 2px solid var(--base-color);
  padding: 0.5rem 2rem;
}

@mixin button-wrapper() {
  display: flex;
  gap: 1rem;
}

.c-button__wrapper--center {
  @include button-wrapper();
  justify-content: center;
}

.c-button__wrapper--center {
  @include button-wrapper();
  justify-content: flex-start;
}

/* roulette area */
.roulette-area {
  width: 100%;
  height: 100dvh;
  display: grid;
  place-content: center;
}

.roulette-area__inner {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  height: 30dvh;
}

.roulette-value {
  color: var(--accent-color02);
  font-weight: bold;
  font-size: 128px;
  display: grid;
  place-content: center;
}